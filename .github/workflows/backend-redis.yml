name: Backend CI

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'backend/**'

jobs:
  build-backend:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]

    steps:
      - name: Descargar el código
        uses: actions/checkout@v2
      - name: Setup Node.js utilizando versión ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cachear node_modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Instalar las dependencias
        run: npm install
        working-directory: ./backend
      - name: Ejecutar los tests
        run: npm test -- --coverage
        working-directory: ./backend
      - name: Cargar como artefacto el coverage
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-report
          path: ./backend/coverage

  publish-backend:
    runs-on: ubuntu-latest

    needs: build-backend

    steps:
      - name: Descargar el código
        uses: actions/checkout@v2
      - name: Deploy en Heroku
        uses: akhileshns/heroku-deploy@v3.8.8
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "github-actions-example-nodejs"
          heroku_email: "lszikora@dblandit.com"
          appdir: ./backend